Resources:
  #Create 3 x VPCs
  VPC-A:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostname: true
      Tags:
        - Key: Name
          Value: VPC-A

  VPC-B:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.1.0.0/16
      EnableDnsSupport: true
      EnableDnsHostname: true
      Tags:
        - Key: Name
          Value: VPC-B

  VPC-C:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.2.0.0/16
      EnableDnsSupport: true
      EnableDnsHostname: true
      Tags:
        - Key: Name
          Value: VPC-C

  #Create 3 Subnets for each VPC

  #Subnets for VPC-A
  VPC-A NV1a:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC-A
      CidrBlock: 10.0.0.0/24
      AvailabilityZone: us-east-1a
      Tags:
        - Key: Name
          Value: VPC-A NV1a

  VPC-A NV1b:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC-A
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: us-east-1b
      Tags:
        - Key: Name
          Value: VPC-A NV1b

  VPC-A NV1c:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC-A
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: us-east-1c
      Tags:
        - Key: Name
          Value: VPC-A NV1c

  #Subnets for VPC-B
  VPC-B NV1a:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC-B
      CidrBlock: 10.1.0.0/24
      AvailabilityZone: us-east-1a
      Tags:
        - Key: Name
          Value: VPC-B NV1a

  VPC-B NV1b:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC-B
      CidrBlock: 10.1.1.0/24
      AvailabilityZone: us-east-1b
      Tags:
        - Key: Name
          Value: VPC-B NV1b

  VPC-B NV1c:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC-B
      CidrBlock: 10.1.2.0/24
      AvailabilityZone: us-east-1c
      Tags:
        - Key: Name
          Value: VPC-B NV1c

  #Subnets for VPC-C
  VPC-C NV1a:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC-C
      CidrBlock: 10.2.0.0/24
      AvailabilityZone: us-east-1a
      Tags:
        - Key: Name
          Value: VPC-C NV1a

  VPC-C NV1b:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC-C
      CidrBlock: 10.2.1.0/24
      AvailabilityZone: us-east-1b
      Tags:
        - Key: Name
          Value: VPC-C NV1b

  VPC-C NV1c:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC-C
      CidrBlock: 10.2.2.0/24
      AvailabilityZone: us-east-1c
      Tags:
        - Key: Name
          Value: VPC-C NV1c

  #Create Internet Gateway for each VPC
  VPC-A IGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: VPC-A IGW

  VPC-B IGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: VPC-B IGW

  VPC-C IGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: VPC-C IGW

  #Attach Internet Gateways to coprresponding VPC
  Attach-IGW-A:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC-A
      InternetGatewayId: !Ref VPC-A IGW

  Attach-IGW-B:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC-B
      InternetGatewayId: !Ref VPC-B IGW

  Attach-IGW-C:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC-C
      InternetGatewayId: !Ref VPC-C IGW

  # Route Tables
  RouteTable-A:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC-A
      Tags:
        - Key: Name
          Value: VPC-A Route Table

  RouteTable-B:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC-B
      Tags:
        - Key: Name
          Value: VPC-B Route Table

  RouteTable-C:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC-C
      Tags:
        - Key: Name
          Value: VPC-C Route Table

  # Routes
  Route-A:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTable-A
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref IGW-A

  Route-B:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTable-B
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref IGW-B

  Route-C:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTable-C
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref IGW-C

Outputs:
  VPC-A-ID:
    Description: "VPC A ID"
    Value: !Ref VPC-A

  VPC-B-ID:
    Description: "VPC B ID"
    Value: !Ref VPC-B

  VPC-C-ID:
    Description: "VPC C ID"
    Value: !Ref VPC-C